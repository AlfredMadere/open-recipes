# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2023-10-24T00:41:23+00:00

from __future__ import annotations

from typing import List, Union

from fastapi import FastAPI

from models import Ingredient, Recipe, RecipeList, Review, User
from database import engine 
from sqlalchemy import text

app = FastAPI(
    title='Recipe Service API',
    version='1.0.0',
    description='API for managing recipes, ingredients, users, and reviews.',
)


@app.get('/ingredients', response_model=List[Ingredient])
def get_ingredients() -> List[Ingredient]:
    """
    Get all ingredients
    """
    pass


@app.post('/ingredients', response_model=None, responses={'201': {'model': Ingredient}})
def post_ingredients(body: Ingredient) -> Union[None, Ingredient]:
    """
    Create a new ingredient
    """
    pass


@app.get('/recipe-lists', response_model=List[RecipeList])
def get_recipe_lists() -> List[RecipeList]:
    """
    Get all recipe lists
    """
    pass

@app.get('/recipe-lists/', response_model=List[RecipeList])
def get_recipe_lists() -> List[RecipeList]:
    """
    Get all recipe lists
    """
    pass



@app.post(
    '/recipe-lists', response_model=None, responses={'201': {'model': RecipeList}}
)
def post_recipe_lists(body: RecipeList) -> Union[None, RecipeList]:
    """
    Create a new recipe list
    """
    pass


@app.get('/recipes', response_model=List[Recipe])
def get_recipes() -> List[Recipe]:
    """
    Get all recipes
    """
    pass


@app.post('/recipes', response_model=None, responses={'201': {'model': Recipe}})
def post_recipes(body: Recipe) -> Union[None, Recipe]:
    """
    Create a new recipe
    """
    pass


@app.get('/reviews', response_model=List[Review])
def get_reviews() -> List[Review]:
    """
    Get all reviews
    """
    pass


@app.post('/reviews', response_model=None, responses={'201': {'model': Review}})
def post_reviews(body: Review) -> Union[None, Review]:
    """
    Create a new review
    """
    pass


@app.get('/users', response_model=List[User])
def get_users() -> List[User]:
    """
    Get all users
    """
    pass


@app.get('/users/{user_id}',response_model=User)
def get_user(user_id: int) -> List[User]:
    """
    Get all users
    """
    with engine.begin() as conn:
        result = conn.execute(text(f"SELECT * FROM users WHERE id = {user_id}"))
        id, name, email, phone = result.fetchone()
        return User(id=id, name=name, email=email, phone=phone)

@app.post('/users', response_model=None, responses={'201': {'model': User}})
def post_users(body: User) -> Union[None, User]:
    """
    Create a new user
    """
    pass

if __name__ == '__main__':
    import uvicorn
    uvicorn.run(app, host='0.0.0.0', port=8000)